;; =========================================================================
;; My own changes... I worked very hard to figure them out and I'm very
;; proud of them. :-)


(setq load-path (add-to-list 'load-path "~/.lisp.gnu"))
(package-initialize)

(require 'helm)
(global-set-key (kbd "C-x b") 'helm-buffers-list)
(global-set-key (kbd "M-x") 'helm-M-x)
(global-set-key (kbd "M-y") 'helm-show-kill-ring)
(global-set-key (kbd "C-x C-f") 'helm-find-files)

(define-key helm-map (kbd "<tab>") 'helm-execute-persistent-action)

(powerline-default-theme)
(minimap-mode)

(require 'scroll-in-place)
(require 'magit)
(setq magit-last-seen-setup-instructions "1.4.0")

(require 'auto-complete)
(add-to-list 'ac-dictionary-directories "/usr/share/auto-complete/dict/")
(require 'auto-complete-config)
(ac-config-default)
(setq ac-auto-start 4)
(ac-flyspell-workaround)

(require 'mmm-mode)
(setq mmm-global-mode 'maybe)
(mmm-add-mode-ext-class 'html-mode "\\.php\\'" 'html-php)

(autoload 'ebib "ebib" "Ebib, a BibTeX database manager." t)

(require 'undo-tree)
(global-undo-tree-mode)

(load "mode-hooks")
(load "copypaste")
(load "miscdefuns")
(load "keys")
(load "hunspellconf")
(load "flycheck-cargo")

(setq use-dialog-box nil)

(add-hook 'before-save-hook 'delete-trailing-whitespace)
(add-hook 'after-init-hook #'global-flycheck-mode)
(which-key-mode)

(add-to-list 'auto-mode-alist '("\\.text\\'" . markdown-mode))
(add-to-list 'auto-mode-alist '("\\.markdown\\'" . markdown-mode))
(add-to-list 'auto-mode-alist '("\\.md\\'" . markdown-mode))

(add-to-list 'auto-mode-alist '("\\.php\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.html\\'" . web-mode))

(modify-all-frames-parameters (list (cons 'cursor-type 'bar)))

(server-start)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(blink-cursor-mode nil)
 '(c-hanging-braces-alist
   (quote
    ((brace-list-open)
     (brace-entry-open)
     (statement-cont)
     (substatement-open after)
     (block-close . c-snug-do-while)
     (extern-lang-open after)
     (namespace-open after)
     (module-open after)
     (composition-open after)
     (inexpr-class-open after)
     (inexpr-class-close before))))
 '(case-fold-search t)
 '(column-number-mode t)
 '(cperl-indent-level 8)
 '(dired-omit-files-p t t)
 '(dired-omit-mode t t)
 '(global-font-lock-mode t nil (font-lock))
 '(global-hl-line-mode 1)
 '(global-linum-mode t)
 '(gnuserv-program (concat exec-directory "/gnuserv"))
 '(haskell-indent-spaces 8)
 '(inferior-S+5-program-name "R")
 '(inhibit-startup-screen t)
 '(line-number-mode t)
 '(load-home-init-file t t)
 '(lua-indent-level 8)
 '(make-backup-files nil)
 '(mouse-wheel-follow-mouse t)
 '(mouse-wheel-mode t nil (mwheel))
 '(paren-mode (quote paren) nil (paren))
 '(rust-indent-offset 8)
 '(show-paren-mode t nil (paren))
 '(speedbar-show-unknown-files t)
 '(speedbar-supported-extension-expressions
   (quote
    (".[ch]\\(\\+\\+\\|pp\\|c\\|h\\|xx\\)?" ".tex\\(i\\(nfo\\)?\\)?" ".el" ".emacs" ".l" ".li?sp" ".p" ".java" ".f\\(90\\|77\\|or\\)?" ".ada" ".p[lm]" ".tcl" ".m" ".scm" ".pm" ".py" ".s?html" ".ma?k" "makefile\\(\\.in\\|\\.am\\)?")))
 '(split-width-threshold 200)
 '(tool-bar-mode nil nil (tool-bar))
 '(toolbar-visible-p nil)
 '(visible-bell t)
 '(w3m-coding-system (quote utf-8)))
;;
;;
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :background "LightYellow" :foreground "black" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 98 :width normal :foundry "adobe" :family "Source Code Pro"))))
 '(cperl-array-face ((((class color) (background light)) (:foreground "magenta4"))))
 '(cperl-hash-face ((((class color) (background light)) (:foreground "steelblue" :bold t))))
 '(cperl-nonoverridable-face ((((class color) (background light)) (:foreground "navy"))))
 '(font-latex-bold-face ((t (:weight bold))))
 '(font-latex-italic-face ((t (:slant italic))))
 '(font-latex-string-face ((t (:foreground "green4"))))
 '(font-lock-comment-face ((((class color) (background light)) (:foreground "rosybrown"))))
 '(font-lock-doc-string-face ((((class color) (background light)) (:foreground "green4"))))
 '(font-lock-function-name-face ((((class color) (background light)) (:foreground "blue4" :bold t))))
 '(font-lock-keyword-face ((((class color) (background light)) (:foreground "red3"))))
 '(font-lock-preprocessor-face ((((class color) (background light)) (:foreground "steelblue"))))
 '(font-lock-reference-face ((((class color) (background light)) (:foreground "magenta4"))))
 '(font-lock-string-face ((((class color) (background light)) (:foreground "green4"))))
 '(font-lock-type-face ((((class color) (background light)) (:foreground "navy"))))
 '(font-lock-variable-name-face ((((class color) (background light)) (:foreground "magenta4" :bold t))))
 '(green ((t (:foreground "green4"))))
 '(hl-line ((t (:background "#eefaff"))))
 '(hyper-apropos-documentation ((((class color) (background light)) (:foreground "black"))))
 '(info-node ((t (:foreground "navy" :bold t))))
 '(magit-item-highlight ((t (:background "#ffffaa"))))
 '(powerline-active1 ((t (:background "grey22" :foreground "white"))))
 '(powerline-active2 ((t (:background "grey40" :foreground "white"))))
 '(powerline-inactive1 ((t (:background "grey11" :foreground "white"))))
 '(powerline-inactive2 ((t (:background "grey20" :foreground "gainsboro"))))
 '(rainbow-delimiters-depth-1-face ((t (:foreground "black"))))
 '(rainbow-delimiters-depth-2-face ((t (:foreground "dark red"))))
 '(rainbow-delimiters-depth-3-face ((t (:foreground "dark olive green"))))
 '(rainbow-delimiters-depth-4-face ((t (:foreground "dark blue"))))
 '(rainbow-delimiters-depth-5-face ((t (:foreground "dark orchid"))))
 '(rainbow-delimiters-depth-6-face ((t (:foreground "deep sky blue"))))
 '(rainbow-delimiters-depth-7-face ((t (:foreground "magenta"))))
 '(rainbow-delimiters-depth-8-face ((t (:foreground "lime green"))))
 '(rainbow-delimiters-depth-9-face ((t (:foreground "deep pink"))))
 '(rainbow-delimiters-mismatched-face ((t (:inherit rainbow-delimiters-unmatched-face))))
 '(rainbow-delimiters-unmatched-face ((t (:foreground "red"))))
 '(yellow ((t (:foreground "yellow4")))))

(set-fontset-font t 'unicode "Symbola" nil 'prepend)
(setq minibuffer-max-depth nil)

(add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/") t)

(message "Init completed")
